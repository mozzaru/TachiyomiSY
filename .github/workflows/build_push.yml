name: Release Builder
on:
  push:
    branches: 
      - 'master'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build release app
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

    steps:
      - name: Clone repo
        uses: actions/checkout@v4

      - name: Configure Git with token
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${GIT_TOKEN}@github.com/${{ github.repository }}

      - name: Setup Android SDK
        run: |
          ${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager "build-tools;29.0.3"

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Set up gradle
        uses: gradle/actions/setup-gradle@v4

      # SY -->
      - name: Write google-services.json
        uses: DamianReeves/write-file-action@v1.3
        with:
          path: app/google-services.json
          contents: ${{ secrets.GOOGLE_SERVICES_TEXT }}
          write-mode: overwrite

      - name: Write client_secrets.json
        uses: DamianReeves/write-file-action@v1.3
        with:
          path: app/src/main/assets/client_secrets.json
          contents: ${{ secrets.CLIENT_SECRETS_TEXT }}
          write-mode: overwrite
      # SY <--

      - name: Check code format
        run: ./gradlew spotlessCheck

      - name: Build app
        run: ./gradlew assembleStandardRelease

      - name: Run unit tests
        run: ./gradlew testReleaseUnitTest testStandardReleaseUnitTest

      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/standard/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: '35.0.1'

      - name: Clean up build artifacts
        run: |
          set -e

          mv app/build/outputs/apk/standard/release/app-standard-universal-release-unsigned-signed.apk TachiyomiSY.apk
          sha=`sha256sum TachiyomiSY.apk | awk '{ print $1 }'`
          echo "APK_UNIVERSAL_SHA=$sha" >> $GITHUB_ENV

          mv app/build/outputs/apk/standard/release/app-standard-arm64-v8a-release-unsigned-signed.apk TachiyomiSY-arm64-v8a.apk
          sha=`sha256sum TachiyomiSY-arm64-v8a.apk | awk '{ print $1 }'`
          echo "APK_ARM64_V8A_SHA=$sha" >> $GITHUB_ENV

          mv app/build/outputs/apk/standard/release/app-standard-armeabi-v7a-release-unsigned-signed.apk TachiyomiSY-armeabi-v7a.apk
          sha=`sha256sum TachiyomiSY-armeabi-v7a.apk | awk '{ print $1 }'`
          echo "APK_ARMEABI_V7A_SHA=$sha" >> $GITHUB_ENV

          mv app/build/outputs/apk/standard/release/app-standard-x86-release-unsigned-signed.apk TachiyomiSY-x86.apk
          sha=`sha256sum TachiyomiSY-x86.apk | awk '{ print $1 }'`
          echo "APK_X86_SHA=$sha" >> $GITHUB_ENV
          
          mv app/build/outputs/apk/standard/release/app-standard-x86_64-release-unsigned-signed.apk TachiyomiSY-x86_64.apk
          sha=`sha256sum TachiyomiSY-x86_64.apk | awk '{ print $1 }'`
          echo "APK_X86_64_SHA=$sha" >> $GITHUB_ENV

      - name: Save SHA checksums to file
        run: |
          echo "Universal: ${{ env.APK_UNIVERSAL_SHA }}" > APK_SHA.txt
          echo "arm64-v8a: ${{ env.APK_ARM64_V8A_SHA }}" >> APK_SHA.txt
          echo "armeabi-v7a: ${{ env.APK_ARMEABI_V7A_SHA }}" >> APK_SHA.txt
          echo "x86: ${{ env.APK_X86_SHA }}" >> APK_SHA.txt
          echo "x86_64: ${{ env.APK_X86_64_SHA }}" >> APK_SHA.txt

      - name: Upload APKs as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: TachiyomiSY-APKs
          path: |
            TachiyomiSY.apk
            TachiyomiSY-arm64-v8a.apk
            TachiyomiSY-armeabi-v7a.apk
            TachiyomiSY-x86.apk
            TachiyomiSY-x86_64.apk

      - name: Upload SHA checksums as artifact
        uses: actions/upload-artifact@v4
        with:
          name: APK_SHA_Checksums
          path: APK_SHA.txt
      
         # Clean build only if build is successful
      - name: Clean Gradle Build Directory (on success)
        if: success()
        run: |
          ./gradlew clean
          rm -f keystore.jks
          rm -f app/google-services.json
          rm -f app/src/main/assets/client_secrets.json